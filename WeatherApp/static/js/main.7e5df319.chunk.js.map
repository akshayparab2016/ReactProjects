{"version":3,"sources":["App.js","index.js"],"names":["App","useState","search","setSearch","cityName","setCityName","cityTemp","setCityTemp","cityTempMax","setCityTempMax","cityTempMin","setCityTempMin","cityLongitude","setCityLongitude","cityLatitude","setcityLatitude","windSpeed","setWindSpeed","pressure","setPessure","humidity","setHumidity","getData","a","Axios","get","then","response","data","name","main","temp","temp_max","temp_min","coord","lon","lat","wind","speed","catch","error","alert","className","onSubmit","e","preventDefault","value","onChange","target","placeholder","onClick","Math","round","style","textAlign","ReactDOM","render","document","getElementById"],"mappings":"kOAoGeA,EAhGH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACTC,EADS,KACDC,EADC,OAEgBF,mBAAU,IAF1B,mBAETG,EAFS,KAECC,EAFD,OAGgBJ,mBAAU,IAH1B,mBAGTK,EAHS,KAGCC,EAHD,OAIsBN,mBAAU,IAJhC,mBAITO,EAJS,KAIIC,EAJJ,OAKsBR,mBAAU,IALhC,mBAKTS,EALS,KAKIC,EALJ,OAM0BV,mBAAU,IANpC,mBAMTW,EANS,KAMMC,EANN,OAOwBZ,mBAAU,IAPlC,mBAOTa,EAPS,KAOKC,EAPL,OAQkBd,mBAAU,IAR5B,mBAQTe,EARS,KAQEC,EARF,OASehB,mBAAU,IATzB,mBASTiB,EATS,KASCC,EATD,OAUgBlB,mBAAU,IAV1B,mBAUTmB,EAVS,KAUCC,EAVD,KAYVC,EAAO,uCAAG,sBAAAC,EAAA,4DACC,mCADD,SAERC,IAAMC,IAAN,4DAA+DvB,EAA/D,kBADS,qCAEhBwB,MAAK,SAAAC,GAELtB,EAAYsB,EAASC,KAAKC,MAC1BtB,EAAYoB,EAASC,KAAKE,KAAKC,KAAO,QACtCtB,EAAekB,EAASC,KAAKE,KAAKE,SAAW,QAC7CrB,EAAegB,EAASC,KAAKE,KAAKG,SAAW,QAC7CpB,EAAiBc,EAASC,KAAKM,MAAMC,KACrCpB,EAAgBY,EAASC,KAAKM,MAAME,KACpCnB,EAAaU,EAASC,KAAKS,KAAKC,OAChCnB,EAAWQ,EAASC,KAAKE,KAAKZ,UAC9BG,EAAYM,EAASC,KAAKE,KAAKV,aAE/BmB,OAAM,SAACC,GACNC,MAAM,uCAhBQ,2CAAH,qDAmCb,OACA,qBAAKC,UAAU,OAAf,SACE,qBAAKA,UAAU,YAAf,SACF,uBAAMC,SAlBS,SAACC,GAChBA,EAAEC,iBACa,KAAX3C,EACFuC,MAAM,+BAENnB,IAEFnB,EAAU,KAWV,UACI,oBAAIuC,UAAU,QAAd,8BACA,uBAAOA,UAAU,cAAcI,MAAO5C,EAAQ6C,SAVxB,SAACH,GAC3BzC,EAAUyC,EAAEI,OAAOF,QAS8DG,YAAY,sBAF7F,iBAII,wBAAQP,UAAU,8BAA8BQ,QAAS5B,EAAzD,sBACN,uBAAM,uBAAM,uBACL,sBAAKoB,UAAU,eAAf,UACA,sBAAKA,UAAU,MAAf,UACA,sBAAKA,UAAU,4DAAf,UACA,6BAAKtC,IACL,+BAAK+C,KAAKC,MAAiB,IAAX9C,GAAkB,IAAlC,gBAEH,sBAAKoC,UAAU,4DAAf,UACE,sCADF,IACgB,+BAAKS,KAAKC,MAAoB,IAAd5C,GAAqB,IAArC,YACd,sCAFF,IAEgB,mCAAM2C,KAAKC,MAAoB,IAAd1C,GAAqB,IAAtC,gBAEb,sBAAKgC,UAAU,4DAAf,UACA,8CADA,IACsB,+BAAK9B,EAAL,UAGtB,sBAAK8B,UAAU,4DAAf,UACA,4CAAmB,+BAAK5B,EAAL,aAGtB,uBACI,sBAAK4B,UAAU,MAAMW,MAAO,CAACC,UAAW,UAAxC,UACA,sBAAKZ,UAAU,4DAAf,UACF,4CACA,6BAAK1B,OAEH,sBAAK0B,UAAU,4DAAf,UACA,0CACF,6BAAKxB,OAEH,sBAAKwB,UAAU,4DAAf,UACA,0CACF,6BAAKtB,qBCtFXmC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.7e5df319.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport Axios from 'axios';\nimport './App.css';\n\nconst App = () => {\n  const [search, setSearch] = useState('');\n  const [cityName, setCityName] = useState ('');\n  const [cityTemp, setCityTemp] = useState ('');\n  const [cityTempMax, setCityTempMax] = useState ('');\n  const [cityTempMin, setCityTempMin] = useState ('');\n  const [cityLongitude, setCityLongitude] = useState ('');\n  const [cityLatitude, setcityLatitude] = useState ('');\n  const [windSpeed, setWindSpeed] = useState ('');\n  const [pressure, setPessure] = useState ('');\n  const [humidity, setHumidity] = useState ('');\n  \n  const getData = async () => {\n    const ApiKey = '180941f68139fba12f166dc35d9b688b';\n    await Axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${search}&appid=${ApiKey}`)\n  .then(response => {\n    // console.log(response);\n   setCityName(response.data.name)\n   setCityTemp(response.data.main.temp - 273.15)\n   setCityTempMax(response.data.main.temp_max - 273.15);\n   setCityTempMin(response.data.main.temp_min - 273.15);\n   setCityLongitude(response.data.coord.lon);\n   setcityLatitude(response.data.coord.lat);\n   setWindSpeed(response.data.wind.speed);\n   setPessure(response.data.main.pressure);\n   setHumidity(response.data.main.humidity);\n  })\n  .catch((error) => {\n    alert('Please enter a valid Geolocation');\n  })\n  };\n\nconst onSubmit = (e) => {\n  e.preventDefault();\n  if (search === ''){\n    alert('Geolocation cannot be blank');\n  }else {\n    getData();\n  }\n  setSearch('');\n}\n\nconst searchChangeHandler = (e) => {\n  setSearch(e.target.value);\n // console.log(e.target.value);\n}\n\n  return (\n  <div className='main'>\n    <div className='container'>\n  <form onSubmit={onSubmit}>\n      <h1 className=\"title\">Weather Forecast</h1>\n      <input className=\"regioninput\" value={search} onChange={searchChangeHandler} placeholder='Enter a location ' /> \n      &nbsp; &nbsp; &nbsp;\n      <button className=\"buttonSearch btn btn-danger\" onClick={getData}> Search </button>\n<br /><br /><br />\n       <div className='user-weather'>\n       <div className='row'>\n       <div className=\"col-xs-6 col-sm-6 col-md-4 col-lg-3 col-xl-3 weather-temp\">\n       <h2>{cityName}</h2>\n       <h1>{Math.round(cityTemp * 100) / 100 } °C </h1>\n    </div>\n    <div className=\"col-xs-6 col-sm-6 col-md-4 col-lg-3 col-xl-3 weather-temp\">\n      <h3> Max</h3> <h4>{Math.round(cityTempMax * 100) / 100} °C</h4>\n      <h3>Min </h3> <h4> {Math.round(cityTempMin * 100) / 100} °C </h4>\n       </div>\n       <div className=\"col-xs-6 col-sm-6 col-md-4 col-lg-3 col-xl-3 weather-temp\">\n       <h3> Longitude  </h3> <h4>{cityLongitude} </h4>\n       </div>\n\n       <div className=\"col-xs-6 col-sm-6 col-md-4 col-lg-3 col-xl-3 weather-temp\">\n       <h3> Latitude </h3><h4>{cityLatitude} </h4>\n        </div>\n        </div>\n    <hr />\n        <div className=\"row\" style={{textAlign: 'center'}}>\n        <div className=\"col-xs-6 col-sm-4 col-md-4 col-lg-4 col-xl-4 weather-info\">\n      <h3>Wind Speed</h3>\n      <h4>{windSpeed}</h4>\n        </div>\n        <div className=\"col-xs-6 col-sm-4 col-md-6 col-lg-4 col-xl-4 weather-info\">\n        <h3>Pressure</h3>\n      <h4>{pressure}</h4>\n        </div>\n        <div className=\"col-xs-6 col-sm-4 col-md-6 col-lg-4 col-xl-4 weather-info\">\n        <h3>Humidity</h3>\n      <h4>{humidity}</h4>\n        </div>\n        </div>\n        </div>\n    </form>\n    </div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n\n"],"sourceRoot":""}